#version 430 core
//uniform mat4 in_Projection;
//uniform mat4 in_Model;

//attribute vec3 in_Position;
//attribute vec4 in_Color;

//varying vec4 ex_Color;
// Per-vertex inputs
layout(location = 0) in vec4 vPosition;
layout(location = 1) in vec3 vNormalIn;
layout(location = 2) in vec2 vTexCoordIn;
layout(location = 3) in vec3 vTanIn;
layout(location = 4) in vec3 vBitanIn;
// Uniform data inputs are the same for all vertices
uniform mat4 modelMat;
uniform mat4 invModelMat;
uniform mat4 viewMat;
uniform mat4 projMat;
uniform vec3 cameraPosition;

out vec2 texCoord;

void main()
{
  gl_Position = in_Projection * in_Model * vec4(in_Position, 1.0);
  ex_Color = in_Color;

// Pass through the texture coordinate
	texCoord = vTexCoordIn;

}

